<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	<!--로그인 관련 권한 인증 설정이 들어감 -->
	<!--hasRole(무슨권한 줄지정함) -->
	<!--pattern 에 어디서 권한을줄지 적어줌 -->
	<bean id="LoginFailHandler" class="study.spring.emp.member.auth.LoginFailHandler"/>
	<bean id="LoginSuccessHandler" class="study.spring.emp.member.auth.LoginSuccessHandler"/>
	
	<security:http pattern="/resources/**" security="none"/>
	<security:http>
<!-- 		<security:intercept-url pattern="/hr/*" access="hasAnyRole('ROLE_ADMIN,ROLE_USER')"/> -->
		<security:form-login login-page="/login"
			username-parameter="id" password-parameter="pw"
			login-processing-url="/loginCheck"
			authentication-failure-handler-ref="LoginFailHandler"
			authentication-success-handler-ref="LoginSuccessHandler"
		/>
<!-- 			default-target-url="/loginCheck" -->
		<security:logout logout-url="/logout" logout-success-url = "/" invalidate-session="true"/>
		<security:access-denied-handler error-page="/error/autherror"/>
		<security:csrf disabled="true"/>
		<security:session-management>
			<security:concurrency-control max-sessions="1" expired-url="/error/loginDuplicate"/>
		</security:session-management>
		</security:http>
	
		<security:authentication-manager>
		<security:authentication-provider>
		<security:user-service>
		<security:user name="master" password="1234" authorities="ROLE_MASTER"/>
		</security:user-service>
		</security:authentication-provider>
		</security:authentication-manager>
	
		<!--로그인 성공했을때 default-target-url-->
		<!--로그인 실패 했을때 authentication-failure-url-->
		
		<bean id="memberAuthenticationProvider"
			class="study.spring.emp.member.auth.MemberAuthenticationProvider"/>
		<security:authentication-manager>
			<security:authentication-provider ref="memberAuthenticationProvider"/>
		</security:authentication-manager>	
	
	
</beans>
