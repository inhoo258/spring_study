<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<aop:aspectj-autoproxy />
	<context:component-scan
		base-package="study.spring.emp" />
	<!-- <context:property-placeholder -->
	<!-- location="classpath:db/jdbc.properties" /> 여기인듯 -->

	<!-- jdbc 빈설정 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName"
			value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 트랜젝션 설정 -->

	<tx:annotation-driven
		transaction-manager="txManager" />

	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 암호화 -->

	<bean id="propertyConfigurer"
		class="org.jasypt.spring31.properties.EncryptablePropertyPlaceholderConfigurer">
		<constructor-arg ref="configurationEncryptor" />
		<property name="locations">
			<list>
				<value>classpath:/db/jdbc.properties</value>  <!-- classpath -> 자바 리소스를 컴파일 하는 경로를 다 안찍고 classpath 로 대신함 -->
			</list>
		</property>
	</bean>

	<bean id="environmentVariableConfiguration"
		class="org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig">
		<property name="algorithm" value="PBEWithMD5AndDES" />
		<property name="passwordEnvName"
			value="APP_ENCRYPTION_PASSWORD" />
	</bean>

	<bean id="configurationEncryptor"
		class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
		<property name="config"
			ref="environmentVariableConfiguration" />
		<property name="password" value="leeinho" />
	</bean>

	<bean id="bcryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />



	<bean id = "multipartResolver"
		class = "org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize">
			<value>-1</value>
		</property>			
	</bean>


	<!-- <tx:advice id="txAdvice" transaction-manager="txManager"> -->
	<!-- <tx:attributes> -->
	<!-- <tx:method name="get*" read-only="true" /> get메소드 들은 투랜젝션을 안걸꺼임 -->
	<!-- <tx:method name="*" /> -->

	<!-- </tx:attributes> -->
	<!-- </tx:advice> -->


	<!-- <aop:config> -->
	<!-- <aop:pointcut id="txPointcut" -->
	<!-- expression="execution(* study.spring.emp..*Service.*teEmp(..))" /> -->
	<!-- <aop:advisor advice-ref="txAdvice" -->
	<!-- pointcut-ref="txPointcut" /> -->
	<!-- </aop:config> -->

	<!-- aop관련 기능 annotation -->


</beans>
